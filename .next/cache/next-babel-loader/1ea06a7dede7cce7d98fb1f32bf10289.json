{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport { handleResponse } from './auth';\nimport Router from \"next/router\";\nexport const createItem = (item, token) => {\n  return fetch(`${API}/create-item`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(item)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getItems = token => {\n  return fetch(`${API}/list`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateItem = (item, token) => {\n  return fetch(`${API}/update-item`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(item)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removeItem = (slug, token) => {\n  return fetch(`${API}/delete-item`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(slug)\n  }).then(response => {\n    Router.reload();\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/malac/OneDrive/שולחן העבודה/My Stuff/Programming/My Projects/shopping-list/frontend/actions/item.js"],"names":["fetch","API","handleResponse","Router","createItem","item","token","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","getItems","updateItem","removeItem","slug","reload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,SAAON,KAAK,CAAE,GAAEC,GAAI,cAAR,EAAuB;AAC/BM,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAH1B,KAFsB;AAO/BK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAPyB,GAAvB,CAAL,CASNS,IATM,CASDC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXM,EAYNC,KAZM,CAYAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZP,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMG,QAAQ,GAAIf,KAAD,IAAW;AAC/B,SAAON,KAAK,CAAE,GAAEC,GAAI,OAAR,EAAgB;AACxBM,IAAAA,MAAM,EAAE,KADgB;AAExBC,IAAAA,OAAO,EAAE;AACLE,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAD1B;AAFe,GAAhB,CAAL,CAMNQ,IANM,CAMDC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GARM,EASNC,KATM,CASAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATP,CAAP;AAUH,CAXM;AAaP,OAAO,MAAMI,UAAU,GAAG,CAACjB,IAAD,EAAOC,KAAP,KAAiB;AACvC,SAAON,KAAK,CAAE,GAAEC,GAAI,cAAR,EAAuB;AAC/BM,IAAAA,MAAM,EAAE,KADuB;AAE/BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAH1B,KAFsB;AAO/BK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAPyB,GAAvB,CAAL,CASNS,IATM,CASDC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXM,EAYNC,KAZM,CAYAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZP,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMK,UAAU,GAAG,CAACC,IAAD,EAAOlB,KAAP,KAAiB;AACvC,SAAON,KAAK,CAAE,GAAEC,GAAI,cAAR,EAAuB;AAC/BM,IAAAA,MAAM,EAAE,QADuB;AAE/BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAH1B,KAFsB;AAO/BK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,IAAf;AAPyB,GAAvB,CAAL,CASNV,IATM,CASDC,QAAQ,IAAI;AACdZ,IAAAA,MAAM,CAACsB,MAAP;AACA,WAAOV,QAAQ,CAACC,IAAT,EAAP;AACH,GAZM,EAaNC,KAbM,CAaAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAbP,CAAP;AAcH,CAfM","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport { handleResponse } from './auth';\r\nimport Router from \"next/router\";\r\n\r\nexport const createItem = (item, token) => {\r\n    return fetch(`${API}/create-item`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(item)\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const getItems = (token) => {\r\n    return fetch(`${API}/list`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateItem = (item, token) => {\r\n    return fetch(`${API}/update-item`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(item)\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const removeItem = (slug, token) => {\r\n    return fetch(`${API}/delete-item`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(slug)\r\n    })\r\n    .then(response => {\r\n        Router.reload();\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}