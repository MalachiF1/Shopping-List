{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport cookie from 'js-cookie';\nimport { API } from '../config';\nimport Router from 'next/router';\nexport const handleResponse = response => {\n  if (response.status === 401) {\n    removeCookie('token');\n    removeLocalStorage('user');\n    Router.push({\n      pathname: '/signin',\n      query: {\n        message: 'Your session is expired. Please signin.'\n      }\n    });\n  }\n};\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signout = next => {\n  removeCookie('token');\n  removeLocalStorage('user');\n  next();\n  return fetch(`${API}/signout`, {\n    metod: 'GET'\n  }).then(response => {\n    console.log('signout successful');\n  }).catch(err => console.log(err));\n}; // set cookie\n\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // get cookie\n\nexport const getCookie = key => {\n  if (false) {\n    return cookie.get(key);\n  }\n}; // localstorage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n}; // authenticate user by passing data to cookie and localstorage\n\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n};\nexport const isAuth = () => {\n  if (false) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/malac/OneDrive/שולחן העבודה/My Stuff/Programming/My Projects/shopping-list/frontend/actions/auth.js"],"names":["fetch","cookie","API","Router","handleResponse","response","status","removeCookie","removeLocalStorage","push","pathname","query","message","signup","user","method","headers","Accept","body","JSON","stringify","then","json","catch","err","console","log","signin","signout","next","metod","setCookie","key","value","set","expires","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeItem","authenticate","data","token","isAuth","cookieChecked","getItem","parse"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport cookie from 'js-cookie';\r\nimport { API } from '../config';\r\nimport Router from 'next/router';\r\n\r\nexport const handleResponse = response => {\r\n    if(response.status === 401) {\r\n        removeCookie('token');\r\n        removeLocalStorage('user');\r\n        Router.push({\r\n            pathname: '/signin',\r\n            query: {\r\n                message: 'Your session is expired. Please signin.'\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = (user) => {\r\n    return fetch(`${API}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const signin = (user) => {\r\n    return fetch(`${API}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const signout = (next) => {\r\n    removeCookie('token');\r\n    removeLocalStorage('user');\r\n    next();\r\n\r\n    return fetch(`${API}/signout`, {\r\n        metod: 'GET'\r\n    })\r\n    .then(response => {\r\n        console.log('signout successful');\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n// set cookie\r\nexport const setCookie = (key, value) => {\r\n    if(process.browser) {\r\n        cookie.set(key, value, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeCookie = (key) => {\r\n    if(process.browser) {\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n\r\n// get cookie\r\nexport const getCookie = (key) => {\r\n    if(process.browser) {\r\n        return cookie.get(key);\r\n    }\r\n};\r\n\r\n// localstorage\r\nexport const setLocalStorage = (key, value) => {\r\n    if(process.browser) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n};\r\n\r\nexport const removeLocalStorage = (key) => {\r\n    if(process.browser) {\r\n        localStorage.removeItem(key);\r\n    }\r\n};\r\n\r\n// authenticate user by passing data to cookie and localstorage\r\nexport const authenticate = (data, next) => {\r\n    setCookie('token', data.token);\r\n    setLocalStorage('user', data.user);\r\n    next();\r\n};\r\n\r\nexport const isAuth = () => {\r\n    if(process.browser) {\r\n        const cookieChecked = getCookie('token');\r\n        if(cookieChecked) {\r\n            if(localStorage.getItem('user')) {\r\n                return JSON.parse(localStorage.getItem('user'));\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}