{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport { handleResponse } from './auth';\nimport Router from \"next/router\";\nimport queryString from 'query-string';\nexport const createItem = (item, token) => {\n  return fetch(`${API}/create-item`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(item)\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createWeeklyItem = (item, token) => {\n  return fetch(`${API}/create-weekly`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(item)\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getItems = token => {\n  return fetch(`${API}/list`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getWeeklyItems = token => {\n  return fetch(`${API}/list-weekly`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateItem = (item, token) => {\n  return fetch(`${API}/update-item`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(item)\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateWeeklyItem = (item, token) => {\n  return fetch(`${API}/update-weekly`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(item)\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removeItem = (slug, token) => {\n  return fetch(`${API}/delete-item`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(slug)\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removeWeeklyItem = (slug, token) => {\n  return fetch(`${API}/delete-weekly`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(slug)\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getUrgentItems = token => {\n  return fetch(`${API}/list-urgent`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listSearch = (params, token) => {\n  let query = queryString.stringify(params);\n  return fetch(`${API}/search?${query}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/malac/OneDrive/שולחן העבודה/My Stuff/Programming/My Projects/shopping-list/frontend/actions/item.js"],"names":["fetch","API","handleResponse","Router","queryString","createItem","item","token","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","createWeeklyItem","getItems","getWeeklyItems","updateItem","updateWeeklyItem","removeItem","slug","removeWeeklyItem","getUrgentItems","listSearch","params","query"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport { handleResponse } from './auth';\r\nimport Router from \"next/router\";\r\nimport queryString from 'query-string';\r\n\r\nexport const createItem = (item, token) => {\r\n    return fetch(`${API}/create-item`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(item)\r\n    })\r\n    .then(response => {\r\n        handleResponse(response);\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const createWeeklyItem = (item, token) => {\r\n    return fetch(`${API}/create-weekly`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(item)\r\n    })\r\n    .then(response => {\r\n        handleResponse(response);\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const getItems = (token) => {\r\n    return fetch(`${API}/list`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n    .then(response => {\r\n        handleResponse(response);\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const getWeeklyItems = (token) => {\r\n    return fetch(`${API}/list-weekly`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n    .then(response => {\r\n        handleResponse(response);\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateItem = (item, token) => {\r\n    return fetch(`${API}/update-item`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(item)\r\n    })\r\n    .then(response => {\r\n        handleResponse(response);\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateWeeklyItem = (item, token) => {\r\n    return fetch(`${API}/update-weekly`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(item)\r\n    })\r\n    .then(response => {\r\n        handleResponse(response);\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const removeItem = (slug, token) => {\r\n    return fetch(`${API}/delete-item`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(slug)\r\n    })\r\n    .then(response => {\r\n        handleResponse(response);\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const removeWeeklyItem= (slug, token) => {\r\n    return fetch(`${API}/delete-weekly`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(slug)\r\n    })\r\n    .then(response => {\r\n        handleResponse(response);\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const getUrgentItems = (token) => {\r\n    return fetch(`${API}/list-urgent`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n    .then(response => {\r\n        handleResponse(response);\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const listSearch = (params, token) => {\r\n    let query = queryString.stringify(params);\r\n    return fetch(`${API}/search?${query}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n    .then(response=> {\r\n        handleResponse(response);\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}